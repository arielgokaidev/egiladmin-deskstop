/*
Se debe agregar validacion y carga de datos cuando un rut ya exista en la tabla de visitas

*/

package views;

import dao.DepartamentoDao;
import dao.EstacionamientoDao;
import dao.ResidenteDao;
import java.util.Calendar;
import java.util.List;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import models.Departamento;
import models.Estacionamiento;
import models.Residente;

public class RegistroVisita extends javax.swing.JInternalFrame {

   private String rut,nombre,apellido,seleccionardpto,seleccionarestacionamiento,seleccionarresidente,usoestacionamientovisita,autorizaresidente;
   
   private DepartamentoDao departamentoDao;
   private ResidenteDao residenteDao;
   private EstacionamientoDao estacionamientoDao;
   
    public RegistroVisita() {
        initComponents();
        // Bloquear redimension
        this.setResizable(false);
        // Boton cerrar y ocultar JInternalFrame
        this.setDefaultCloseOperation(JInternalFrame.HIDE_ON_CLOSE);
 
        // Variables para cargar combobox desde List
        String numeroDepartamento = "";
        String nombre = "";
        String numero = "";
        
        //import java.util.Calendar;
        Calendar cal=Calendar.getInstance();
        
        String fecha=cal.get(Calendar.DATE)+"/"+cal.get(cal.MONTH)+"/"+cal.get(cal.YEAR);
        String hora=cal.get(cal.HOUR_OF_DAY)+ ":"+cal.get(cal.MINUTE)+":"+cal.get(cal.SECOND);
        String fechahora=fecha +" : "+hora;
       
        //fecha y hora sistema
        //JOptionPane.showMessageDialog(null, fechahora);
        this.LbFechaHora.setText(fechahora);
        
        //Check apagado residente
        cbSeleccionarResidente.setEnabled(false);
        //Check apagado uso estacionamiento
        cbSeleccionarEstacionamiento.setEnabled(false);
        
        // DEPARTAMENTOS
        try {
            departamentoDao = new DepartamentoDao();
            //cbSelecionarDpto.addItem("");
            cbSeleccionarDpto.addItem("Seleccionar Departamento");
            List<Departamento> departamentos = departamentoDao.listadoDepartamentos();
            for (int i = 0; i < departamentos.size(); i++) {
                numeroDepartamento = departamentos.get(i).getNumero();
                System.out.println("Número: " + numeroDepartamento);
                cbSeleccionarDpto.addItem(numeroDepartamento);
            }
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
        // ESTACIONAMIENTOS
        try {   
            estacionamientoDao = new EstacionamientoDao();
            cbSeleccionarEstacionamiento.addItem("Seleccionar Estacionamiento");
            List<Estacionamiento> estacionamientos = estacionamientoDao.listadoEstacionamientos();
            for (int i = 0; i < estacionamientos.size(); i++) {
                numero = String.valueOf(estacionamientos.get(i).getNumero());
                System.out.println("Número: " + numero);
                cbSeleccionarEstacionamiento.addItem(numero);
            }
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }

        // RESIDENTES
        try {   
            residenteDao = new ResidenteDao();
            cbSeleccionarResidente.addItem("Seleccionar Residente");
            List<Residente> residentes = residenteDao.listadoResidentes();
            for (int i = 0; i < residentes.size(); i++) {
                nombre = residentes.get(i).getNombres() + " " + residentes.get(i).getApellidos();
                System.out.println("Nombre: " + nombre);
                cbSeleccionarResidente.addItem(nombre);
            }
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtApellido = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbSeleccionarDpto = new javax.swing.JComboBox<>();
        chSeleccionarEstacionamientoVisita = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        txtRut = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbSeleccionarEstacionamiento = new javax.swing.JComboBox<>();
        btnGuardarVisita = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        chAutorizacionResidente = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        cbSeleccionarResidente = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        LbFechaHora = new javax.swing.JLabel();
        txtPatente = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("REGISTRAR VISITAS");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));
        jPanel1.setLayout(null);
        jPanel1.add(txtApellido);
        txtApellido.setBounds(170, 240, 157, 20);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("INGRESAR PATENTE:");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(570, 140, 102, 14);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("SELECCIONAR NUMERO DEPARTAMENTO:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(20, 70, 204, 14);

        cbSeleccionarDpto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSeleccionarDptoActionPerformed(evt);
            }
        });
        jPanel1.add(cbSeleccionarDpto);
        cbSeleccionarDpto.setBounds(280, 70, 200, 20);

        chSeleccionarEstacionamientoVisita.setBackground(new java.awt.Color(204, 204, 204));
        chSeleccionarEstacionamientoVisita.setForeground(new java.awt.Color(255, 255, 255));
        chSeleccionarEstacionamientoVisita.setText("USO ESTACIONAMIENTO VISITA");
        chSeleccionarEstacionamientoVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chSeleccionarEstacionamientoVisitaActionPerformed(evt);
            }
        });
        jPanel1.add(chSeleccionarEstacionamientoVisita);
        chSeleccionarEstacionamientoVisita.setBounds(570, 80, 183, 23);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("INGRESE NOMBRES:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(20, 190, 120, 20);

        txtRut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRutActionPerformed(evt);
            }
        });
        jPanel1.add(txtRut);
        txtRut.setBounds(170, 140, 157, 20);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("INGRESE RUT:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 140, 101, 20);
        jPanel1.add(txtNombre);
        txtNombre.setBounds(170, 190, 157, 20);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("INGRESAR APELLIDOS:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 240, 130, 20);

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("SELECCIONAR ESTACIONMIENTO VISITA");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(570, 190, 199, 14);

        cbSeleccionarEstacionamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSeleccionarEstacionamientoActionPerformed(evt);
            }
        });
        jPanel1.add(cbSeleccionarEstacionamiento);
        cbSeleccionarEstacionamiento.setBounds(570, 210, 197, 20);

        btnGuardarVisita.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnGuardarVisita.setText("GUARDAR INGRESO");
        btnGuardarVisita.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGuardarVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarVisitaActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardarVisita);
        btnGuardarVisita.setBounds(550, 450, 158, 55);

        btnCerrar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCerrar.setText("CERRAR");
        btnCerrar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCerrar);
        btnCerrar.setBounds(250, 450, 158, 55);

        chAutorizacionResidente.setForeground(new java.awt.Color(255, 255, 255));
        chAutorizacionResidente.setText("INGRESO AUTORIZADO POR RESIDENTE:");
        chAutorizacionResidente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chAutorizacionResidenteActionPerformed(evt);
            }
        });
        jPanel1.add(chAutorizacionResidente);
        chAutorizacionResidente.setBounds(20, 310, 227, 23);

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("SELECCIONAR RESIDENTE:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(20, 360, 132, 14);

        jPanel1.add(cbSeleccionarResidente);
        cbSeleccionarResidente.setBounds(200, 360, 238, 20);

        jPanel3.setBackground(new java.awt.Color(204, 153, 0));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("INGRESO DE VISITAS");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("FECHA Y HORA:");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(544, 15, -1, -1));

        LbFechaHora.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel3.add(LbFechaHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 11, 200, 22));

        jPanel1.add(jPanel3);
        jPanel3.setBounds(0, 0, 890, 50);
        jPanel1.add(txtPatente);
        txtPatente.setBounds(730, 140, 100, 20);

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("INGRESE RUT SIN PUNTOS NI GUION");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(350, 140, 179, 14);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 890, 590));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbSeleccionarDptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSeleccionarDptoActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbSeleccionarDptoActionPerformed

    private void cbSeleccionarEstacionamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSeleccionarEstacionamientoActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_cbSeleccionarEstacionamientoActionPerformed

    private void chSeleccionarEstacionamientoVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chSeleccionarEstacionamientoVisitaActionPerformed
        // TODO add your handling code here:
         if(chSeleccionarEstacionamientoVisita.isSelected()){
            cbSeleccionarEstacionamiento.setEnabled(true);
        }else{
            cbSeleccionarEstacionamiento.setEnabled(false);
        }
        
    }//GEN-LAST:event_chSeleccionarEstacionamientoVisitaActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void txtRutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRutActionPerformed

    private void btnGuardarVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarVisitaActionPerformed
        // TODO add your handling code here:
        //rut,nombre,apellido,seleccionardpto,seleccionarestacionamiento,seleccionarresidente,usoestacionamientovisita,autorizaresidente;
        rut = txtRut.getText();
        nombre = txtNombre.getText();
        apellido = txtApellido.getText();
        String selectdpto = (String)cbSeleccionarDpto.getSelectedItem();
        String selectest = (String)cbSeleccionarEstacionamiento.getSelectedItem();
        // Valida vacios
       // if(rut.isEmpty() || nombre.isEmpty() || apellido.isEmpty() || selectdpto.isEmpty()|| selectest.isEmpty()){
        if (rut.isEmpty() || nombre.isEmpty() || apellido.isEmpty() || selectdpto.isEmpty()){  
            JOptionPane.showMessageDialog(this, "Debe completar todos los campos");
        } else {
            //Metodo validador de rut 
            boolean valida = validarRut(rut);
            if (!valida){
                    JOptionPane.showMessageDialog(this, "Rut invalido");
                } else {
                    JOptionPane.showMessageDialog(this, "Visita Ingresada Correctamente al Sistema");
                    System.out.println("lista deptos " + selectdpto);
            } 
        }
    }//GEN-LAST:event_btnGuardarVisitaActionPerformed

    private void chAutorizacionResidenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chAutorizacionResidenteActionPerformed
        // TODO add your handling code here:
        if(chAutorizacionResidente.isSelected()){
            cbSeleccionarResidente.setEnabled(true);
        }else{
            cbSeleccionarResidente.setEnabled(false);
        }
        
    }//GEN-LAST:event_chAutorizacionResidenteActionPerformed
    public static boolean validarRut(String rut) {
        boolean validacion = false;
        try {
            rut =  rut.toUpperCase();
            //rut = rut.replace(".", "");
            rut = rut.replace("-", "");
            int rutAux = Integer.parseInt(rut.substring(0, rut.length() - 1));

            char dv = rut.charAt(rut.length() - 1);

            int m = 0, s = 1;
            for (; rutAux != 0; rutAux /= 10) {
                s = (s + rutAux % 10 * (9 - m++ % 6)) % 11;
            }
            if (dv == (char) (s != 0 ? s + 47 : 75)) {
                validacion = true;
            }
        } catch (java.lang.NumberFormatException e) {
            
        } catch (Exception e) {
            
        }
        return validacion;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LbFechaHora;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnGuardarVisita;
    private javax.swing.JComboBox<String> cbSeleccionarDpto;
    private javax.swing.JComboBox<String> cbSeleccionarEstacionamiento;
    private javax.swing.JComboBox<String> cbSeleccionarResidente;
    private javax.swing.JCheckBox chAutorizacionResidente;
    private javax.swing.JCheckBox chSeleccionarEstacionamientoVisita;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPatente;
    private javax.swing.JTextField txtRut;
    // End of variables declaration//GEN-END:variables
}
